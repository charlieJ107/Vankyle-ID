# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build and Test

on:
  push:
    branches: [ "master", "develop" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-test-web:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./web

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"
      - run: npm ci
      - run: npm test

  build-test-gradle:
    runs-on: ubuntu-latest
# Using Test Embedded database instead of external postgresql
#    services:
#      # Label used to access the service container
#      postgres:
#        # Docker Hub image
#        image: postgres:latest
#        # Provide the password for postgres
#        env:
#          POSTGRES_PASSWORD: postgres
#          POSTGRES_DB: vankyle
#        ports:
#          # Maps tcp port 5432 on service container to the host
#          - 5432:5432
#        # Set health checks to wait until postgres has started
#        options: >-
#          --health-cmd pg_isready
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'oracle'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build
          gradle-version: current
