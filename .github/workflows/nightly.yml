name: Nightly


on:
  push:
    branches: [ "master", "develop" ]


jobs:
  publish-api:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'oracle'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build
          gradle-version: current

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: vankyle-id-api-nightly-${{github.sha}}
          path: build/libs/*.jar

  publish-api-docker:
    runs-on: ubuntu-latest
    permissions:
        packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v2.2.0
        with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/vankyle-id-api
          tags: |
            type=schedule, pattern=nightly

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  publish-frontend:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    defaults:
      run:
        working-directory: ./web
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: "npm"
          cache-dependency-path: "web"

      - run: npm ci
      - run: npm run build --if-present
      - run: npm test

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: vankyle-id-web-nightly-${{github.sha}}
          path: web/build

  publish-frontend-docker:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./web
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/vankyle-id-web
          tags: |
            type=schedule, pattern=nightly

      - name: Build and push Docker image
        uses: docker/build-push-action@v4.1.1
        with:
          context: web
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  publish-docker-nginx:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/vankyle-id-nginx
          tags: |
            type=schedule, pattern=nightly

      - name: Build and push Docker image
        uses: docker/build-push-action@v4.1.1
        with:
          context: web
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}